# ETL Services configuration for OWASP ModSecurity CRS

server_tokens off;

upstream extract_service {
    server etl_extract:8000;
}
upstream transform_service {
    server etl_transform:8000;
}
upstream load_service {
    server etl_load:8000;
}

server {
    listen 80 default_server;
    server_name _;

    # ModSecurity WAF for HTTP traffic
    modsecurity on;
    modsecurity_rules_file /etc/modsecurity.d/include.conf;

    # Reverse proxy to extract service
    location /extract/ {
        proxy_pass http://extract_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Reverse proxy to transform service
    location /transform/ {
        proxy_pass http://transform_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Reverse proxy to load service
    location /load/ {
        proxy_pass http://load_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint
    location /health {
        return 200 'WAF is healthy';
        add_header Content-Type text/plain;
    }

    # Default location for root path
    location / {
        proxy_pass http://extract_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl default_server;
    server_name _;

    # SSL Configuration
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers off;

    # ModSecurity WAF
    modsecurity on;
    modsecurity_rules_file /etc/modsecurity.d/include.conf;

    # Reverse proxy to extract service
    location /extract/ {
        proxy_pass http://extract_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Reverse proxy to transform service
    location /transform/ {
        proxy_pass http://transform_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Reverse proxy to load service
    location /load/ {
        proxy_pass http://load_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint
    location /health {
        return 200 'WAF is healthy';
        add_header Content-Type text/plain;
    }

    # Default location for root path
    location / {
        proxy_pass http://extract_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
